{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CollegeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api'; // Update this with your actual API URL\n  }\n\n  getColleges() {\n    return this.http.get(`${this.apiUrl}/colleges`);\n  }\n  // searchColleges(searchTerm: string): Observable<any[]> {\n  //   return this.http.get<any[]>(`${this.apiUrl}/colleges`, {\n  //     params: { search: searchTerm },\n  //   });\n  // }\n  searchColleges(searchTerm) {\n    // Mock data\n    const mockColleges = [{\n      id: 1,\n      name: 'University of Example',\n      location: 'Example City, EX'\n    }, {\n      id: 2,\n      name: 'Sample State University',\n      location: 'Sample Town, ST'\n    }\n    // Add more mock colleges...\n    ];\n\n    return of(mockColleges.filter(college => college.name.toLowerCase().includes(searchTerm.toLowerCase())));\n  }\n  getPrograms(collegeId) {\n    return this.http.get(`${this.apiUrl}/colleges/${collegeId}/programs`);\n  }\n  static #_ = this.ɵfac = function CollegeService_Factory(t) {\n    return new (t || CollegeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CollegeService,\n    factory: CollegeService.ɵfac,\n    providedIn: 'root'\n  });\n}\nfunction of(arg0) {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"names":["CollegeService","constructor","http","apiUrl","getColleges","get","searchColleges","searchTerm","mockColleges","id","name","location","of","filter","college","toLowerCase","includes","getPrograms","collegeId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","arg0","Error"],"sources":["/Users/pc/Documents/Angular/college-deadline-tracker/frontend/src/app/services/college.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CollegeService {\n  private apiUrl = 'http://localhost:3000/api'; // Update this with your actual API URL\n\n  constructor(private http: HttpClient) {}\n\n  getColleges(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/colleges`);\n  }\n\n  // searchColleges(searchTerm: string): Observable<any[]> {\n  //   return this.http.get<any[]>(`${this.apiUrl}/colleges`, {\n  //     params: { search: searchTerm },\n  //   });\n  // }\n  searchColleges(searchTerm: string): Observable<any[]> {\n    // Mock data\n    const mockColleges = [\n      { id: 1, name: 'University of Example', location: 'Example City, EX' },\n      { id: 2, name: 'Sample State University', location: 'Sample Town, ST' },\n      // Add more mock colleges...\n    ];\n\n    return of(\n      mockColleges.filter((college) =>\n        college.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    );\n  }\n\n  getPrograms(collegeId: string): Observable<any[]> {\n    return this.http.get<any[]>(\n      `${this.apiUrl}/colleges/${collegeId}/programs`\n    );\n  }\n}\nfunction of(\n  arg0: { id: number; name: string; location: string }[]\n): Observable<any[]> {\n  throw new Error('Function not implemented.');\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B,CAAC,CAAC;EAEP;;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,WAAW,CAAC;EACxD;EAEA;EACA;EACA;EACA;EACA;EACAG,cAAcA,CAACC,UAAkB;IAC/B;IACA,MAAMC,YAAY,GAAG,CACnB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAkB,CAAE,EACtE;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,yBAAyB;MAAEC,QAAQ,EAAE;IAAiB;IACrE;IAAA,CACD;;IAED,OAAOC,EAAE,CACPJ,YAAY,CAACK,MAAM,CAAEC,OAAO,IAC1BA,OAAO,CAACJ,IAAI,CAACK,WAAW,EAAE,CAACC,QAAQ,CAACT,UAAU,CAACQ,WAAW,EAAE,CAAC,CAC9D,CACF;EACH;EAEAE,WAAWA,CAACC,SAAiB;IAC3B,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAClB,GAAG,IAAI,CAACF,MAAM,aAAae,SAAS,WAAW,CAChD;EACH;EAAC,QAAAC,CAAA,G;qBAjCUnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdxB,cAAc;IAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;IAAAC,UAAA,EAFb;EAAM;;AAqCpB,SAASf,EAAEA,CACTgB,IAAsD;EAEtD,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}