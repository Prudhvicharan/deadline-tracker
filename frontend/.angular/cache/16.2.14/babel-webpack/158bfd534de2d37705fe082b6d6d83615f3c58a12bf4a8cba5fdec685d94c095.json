{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/college.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/autocomplete\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/button\";\nfunction SearchComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\nexport class SearchComponent {\n  constructor(collegeService, router) {\n    this.collegeService = collegeService;\n    this.router = router;\n    this.searchControl = new FormControl('');\n    this.options = [];\n    this.filteredOptions = of([]); // Initialize with an empty observable\n  }\n\n  ngOnInit() {\n    this.collegeService.getColleges().subscribe(response => {\n      this.options = response.colleges.map(college => college.name);\n      this.initializeAutocomplete();\n    }, error => console.error('Error fetching colleges:', error));\n  }\n  initializeAutocomplete() {\n    this.filteredOptions = this.searchControl.valueChanges.pipe(startWith(''), map(value => this._filter(value || '')));\n  }\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  onSearch() {\n    const searchTerm = this.searchControl.value;\n    if (searchTerm) {\n      this.router.navigate(['/colleges'], {\n        queryParams: {\n          search: searchTerm\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.CollegeService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    decls: 14,\n    vars: 5,\n    consts: [[1, \"search-container\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [3, \"value\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Find College Application Deadlines\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function SearchComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Search for a college\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementStart(8, \"mat-autocomplete\", null, 4);\n        i0.ɵɵtemplate(10, SearchComponent_mat_option_10_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \"Search\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formControl\", ctx.searchControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 3, ctx.filteredOptions));\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlDirective, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.MatAutocomplete, i8.MatOption, i7.MatAutocompleteTrigger, i9.MatButton, i4.NgForm, i3.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","of","map","startWith","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r2","ɵɵadvance","ɵɵtextInterpolate1","SearchComponent","constructor","collegeService","router","searchControl","options","filteredOptions","ngOnInit","getColleges","subscribe","response","colleges","college","name","initializeAutocomplete","error","console","valueChanges","pipe","value","_filter","filterValue","toLowerCase","filter","option","includes","onSearch","searchTerm","navigate","queryParams","search","_","ɵɵdirectiveInject","i1","CollegeService","i2","Router","_2","selectors","decls","vars","consts","template","SearchComponent_Template","rf","ctx","ɵɵlistener","SearchComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","SearchComponent_mat_option_10_Template","_r0","ɵɵpipeBind1"],"sources":["/Users/pc/Documents/Angular/college-deadline-tracker/frontend/src/app/components/search/search.component.ts","/Users/pc/Documents/Angular/college-deadline-tracker/frontend/src/app/components/search/search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { CollegeService } from '../../services/college.service';\nimport { College } from '../../models/college.model';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  searchControl = new FormControl('');\n  options: string[] = [];\n  filteredOptions: Observable<string[]> = of([]); // Initialize with an empty observable\n\n  constructor(private collegeService: CollegeService, private router: Router) {}\n\n  ngOnInit() {\n    this.collegeService.getColleges().subscribe(\n      (response) => {\n        this.options = response.colleges.map(\n          (college: College) => college.name\n        );\n        this.initializeAutocomplete();\n      },\n      (error) => console.error('Error fetching colleges:', error)\n    );\n  }\n\n  private initializeAutocomplete() {\n    this.filteredOptions = this.searchControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => this._filter(value || ''))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter((option) =>\n      option.toLowerCase().includes(filterValue)\n    );\n  }\n\n  onSearch() {\n    const searchTerm = this.searchControl.value;\n    if (searchTerm) {\n      this.router.navigate(['/colleges'], {\n        queryParams: { search: searchTerm },\n      });\n    }\n  }\n}\n","<div class=\"search-container\">\n    <h2>Find College Application Deadlines</h2>\n    <form (ngSubmit)=\"onSearch()\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Search for a college</mat-label>\n        <input type=\"text\" matInput [formControl]=\"searchControl\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n            {{option}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Search</button>\n    </form>\n  </div>"],"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;;;;;;;;ICIrCC,EAAA,CAAAC,cAAA,oBAA4E;IAC1ED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF8CH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAgB;IACzEL,EAAA,CAAAM,SAAA,GACF;IADEN,EAAA,CAAAO,kBAAA,MAAAF,SAAA,MACF;;;ADIV,OAAM,MAAOG,eAAe;EAK1BC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAJlE,KAAAC,aAAa,GAAG,IAAIhB,WAAW,CAAC,EAAE,CAAC;IACnC,KAAAiB,OAAO,GAAa,EAAE;IACtB,KAAAC,eAAe,GAAyBjB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAE6B;;EAE7EkB,QAAQA,CAAA;IACN,IAAI,CAACL,cAAc,CAACM,WAAW,EAAE,CAACC,SAAS,CACxCC,QAAQ,IAAI;MACX,IAAI,CAACL,OAAO,GAAGK,QAAQ,CAACC,QAAQ,CAACrB,GAAG,CACjCsB,OAAgB,IAAKA,OAAO,CAACC,IAAI,CACnC;MACD,IAAI,CAACC,sBAAsB,EAAE;IAC/B,CAAC,EACAC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAC5D;EACH;EAEQD,sBAAsBA,CAAA;IAC5B,IAAI,CAACR,eAAe,GAAG,IAAI,CAACF,aAAa,CAACa,YAAY,CAACC,IAAI,CACzD3B,SAAS,CAAC,EAAE,CAAC,EACbD,GAAG,CAAE6B,KAAK,IAAK,IAAI,CAACC,OAAO,CAACD,KAAK,IAAI,EAAE,CAAC,CAAC,CAC1C;EACH;EAEQC,OAAOA,CAACD,KAAa;IAC3B,MAAME,WAAW,GAAGF,KAAK,CAACG,WAAW,EAAE;IACvC,OAAO,IAAI,CAACjB,OAAO,CAACkB,MAAM,CAAEC,MAAM,IAChCA,MAAM,CAACF,WAAW,EAAE,CAACG,QAAQ,CAACJ,WAAW,CAAC,CAC3C;EACH;EAEAK,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAG,IAAI,CAACvB,aAAa,CAACe,KAAK;IAC3C,IAAIQ,UAAU,EAAE;MACd,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;QAClCC,WAAW,EAAE;UAAEC,MAAM,EAAEH;QAAU;OAClC,CAAC;;EAEN;EAAC,QAAAI,CAAA,G;qBAxCU/B,eAAe,EAAAR,EAAA,CAAAwC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA1C,EAAA,CAAAwC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfrC,eAAe;IAAAsC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb5BpD,EAAA,CAAAC,cAAA,aAA8B;QACtBD,EAAA,CAAAE,MAAA,yCAAkC;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC3CH,EAAA,CAAAC,cAAA,cAA8B;QAAxBD,EAAA,CAAAsD,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAAnB,QAAA,EAAU;QAAA,EAAC;QAC3BlC,EAAA,CAAAC,cAAA,wBAAkC;QACrBD,EAAA,CAAAE,MAAA,2BAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAC3CH,EAAA,CAAAwD,SAAA,eAAmF;QACnFxD,EAAA,CAAAC,cAAA,gCAA0C;QACxCD,EAAA,CAAAyD,UAAA,KAAAC,sCAAA,wBAEa;;QACf1D,EAAA,CAAAG,YAAA,EAAmB;QAErBH,EAAA,CAAAC,cAAA,iBAAwD;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;;QAPzCH,EAAA,CAAAM,SAAA,GAA6B;QAA7BN,EAAA,CAAAI,UAAA,gBAAAiD,GAAA,CAAAzC,aAAA,CAA6B,oBAAA+C,GAAA;QAExB3D,EAAA,CAAAM,SAAA,GAA0B;QAA1BN,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAA4D,WAAA,QAAAP,GAAA,CAAAvC,eAAA,EAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}